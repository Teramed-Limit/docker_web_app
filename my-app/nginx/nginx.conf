user nginx;

worker_processes    auto;

events { worker_connections 1024; }

http {
    log_format  main    '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
    # access_log          /var/log/nginx/access.log main;
	# error_log           /var/log/nginx/error.log notice;

    include             /etc/nginx/mime.types;
    include             /etc/nginx/gzip.conf;
    limit_req_zone      $binary_remote_addr zone=one:10m rate=5r/s;
    server_tokens       off;

    sendfile            on;
    keepalive_timeout   29; # Adjust to the lowest possible value that makes sense for your use case.
    client_body_timeout 10; client_header_timeout 10; send_timeout 10;

    # Front-end server HTTP
    #
    # server {
    #     listen                  80;
    #     server_name             $hostname;
    #     root                    /usr/share/nginx/html;
        
    #     location / {
    #         try_files $uri $uri/ /index.html;
    #     }

    #     # 虛擬目錄
    #     location /images/ {
    #         alias C:/Users/Romeo/Desktop/Image/;
    #     }

    #     add_header X-Frame-Options DENY;
    #     add_header X-Content-Type-Options nosniff;

    #     # 導向至 HTTPS
    #     rewrite ^(.*) https://$host:889$request_uri permanent;
    #     rewrite_log on;
    # }
	
	
	# # Front-end server HTTPS
    # #
    server {
        listen                  443 ssl;
        server_name             $hostname;
        root                    /usr/share/nginx/html;

        ssl_certificate         /etc/nginx/ssl/server.crt;
        ssl_certificate_key     /etc/nginx/ssl/server.key;

        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;

        location / {
            try_files $uri $uri/ /index.html;
        }

        # 虛擬目錄
        # location /images/ {
        #     alias /virtual/image/;
        # }

        location ~ ^/images/(.+\.(?:gif|jpe?g|png))$ {
            alias /virtual/image/$1;
        }
    }


    upstream backend {
        server webapi:5000;
    }

    server {
        listen 81;
        server_name $hostname;

        location / {
            proxy_pass         http://backend;
            proxy_redirect     off;
            proxy_http_version 1.1;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header   Upgrade $http_upgrade;
            proxy_set_header   Connection keep-alive;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
            proxy_set_header   X-Forwarded-Host $server_name;
        }

        # 導向至 HTTPS
        # rewrite ^(.*) https://$host:891$request_uri permanent;
        # rewrite_log on;
    }

    server {
        listen 444 ssl;
        server_name $hostname;

        ssl_certificate         /etc/nginx/ssl/server.crt;
        ssl_certificate_key     /etc/nginx/ssl/server.key;

        location / {
            proxy_pass         http://backend;
            proxy_redirect     off;
            proxy_http_version 1.1;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header   Upgrade $http_upgrade;
            proxy_set_header   Connection keep-alive;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
            proxy_set_header   X-Forwarded-Host $server_name;
        }
    }
}